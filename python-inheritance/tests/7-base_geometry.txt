>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> geometry = BaseGeometry()

>>> geometry.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

>>> geometry.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> geometry.integer_validator("age", 1)

>>> geometry.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> geometry.integer_validator("age", -4)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> geometry.integer_validator("age", 4)

>>> geometry.integer_validator("age", "4")
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geometry.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geometry.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geometry.integer_validator("age", True)

>>> geometry.integer_validator("age", False)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> geometry.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer

>>> geometry.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer